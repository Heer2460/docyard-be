version: "3.9"

services:
  mysqldb:
    image: mysql:8.0
    command: --lower_case_table_names=1
    container_name: mysqldb8
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD : ${MYSQL_PASSWORD}
     # MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - docyard
    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql

#  db:
#    # We use a mariadb image which supports both amd64 & arm64 architecture
#    image: mariadb:10.6.4-focal
#    # If you really want to use MySQL, uncomment the following line
#    #image: mysql:8.0.19
#    environment:
#      - MYSQL_DATABASE=example
#      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
#    restart: always
#    healthcheck:
#      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
#      interval: 3s
#      retries: 5
#      start_period: 30s
#    secrets:
#      - db-password
#    volumes:
#      - db-data:/var/lib/mysql
#    networks:
#      - docyard
  registry-service:
    image: registrysevice:dev
    container_name: RegistryServiceContainer
    hostname: registry-service
    build:
      context: ./registry-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - docyard
    depends_on:
      - mysqldb

  gateway-service:
    image: gatewayservice:${TAG}
    container_name: GatewayServiceContainer
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    depends_on:
      - registry-service
    ports:
      - "8086:8086"
    environment:
       EUREKA_SERVER: ${EUREKA_SERVER}
       SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    networks:
      - docyard

  doc-handling-service:
    image: dochandelingservice:${TAG}
    container_name: DocServiceContainer
    build:
      context: ./doc-handling-service
      dockerfile: Dockerfile
    depends_on:
      - gateway-service
    ports:
      - "8084:8084"
    environment:
      EUREKA_SERVER: ${EUREKA_SERVER}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    networks:
      - docyard

  authentication-service:
    image: authenticationservice:${TAG}
    container_name: authServiceContainer
    build:
      context: ./authentication-service
      dockerfile: Dockerfile
    depends_on:
      - gateway-service
    ports:
      - "8081:8081"
    environment:
        EUREKA_SERVER: ${EUREKA_SERVER}
        SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - docyard

  cron-job-service:
    image: cronjobservice:${TAG}
    container_name: CronServiceContainer
    build:
      context: ./cron-job-service
      dockerfile: Dockerfile
    depends_on:
      - gateway-service
    ports:
      - "8085:8085"
    networks:
      - docyard
    environment:
      EUREKA_SERVER: ${EUREKA_SERVER}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  um-service:
    image: umservice:${TAG}
    container_name: UmServiceContainer
    build:
      context: ./um-service
      dockerfile: Dockerfile
    depends_on:
      - gateway-service
    ports:
      - "8083:8083"
    environment:
      EUREKA_SERVER: ${EUREKA_SERVER}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - docyard

networks:
  docyard:

volumes:
  mysql-data:
